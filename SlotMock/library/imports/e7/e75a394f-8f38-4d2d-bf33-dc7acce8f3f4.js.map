{"version":3,"sources":["assets\\scripts\\slots\\Machine.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Aux from '../SlotEnum';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Machine extends cc.Component {\r\n@property(cc.Node)\r\npublic game = null;\r\n\r\n  @property(cc.Node)\r\n  public button: cc.Node = null;\r\n\r\n  @property(cc.Prefab)\r\n  public _reelPrefab = null;\r\n\r\n  @property({ type: cc.Prefab })\r\n  get reelPrefab(): cc.Prefab {\r\n    return this._reelPrefab;\r\n  }\r\n\r\n  set reelPrefab(newPrefab: cc.Prefab) {\r\n    this._reelPrefab = newPrefab;\r\n    this.node.removeAllChildren();\r\n\r\n    if (newPrefab !== null) {\r\n      this.createMachine();\r\n    }\r\n  }\r\n\r\n  @property({ type: cc.Integer })\r\n  public _numberOfReels = 3;\r\n\r\n  @property({ type: cc.Integer, range: [3, 6], slide: true })\r\n  get numberOfReels(): number {\r\n    return this._numberOfReels;\r\n  }\r\n\r\n  set numberOfReels(newNumber: number) {\r\n    this._numberOfReels = newNumber;\r\n\r\n    if (this.reelPrefab !== null) {\r\n      this.createMachine();\r\n    }\r\n  }\r\n\r\n  private reels = [];\r\n\r\n  public spinning = false;\r\n//organizing and shuffling/randomizing the tiles in reels on the spin\r\n  createMachine(): void {\r\n    this.node.destroyAllChildren();\r\n    this.reels = [];\r\n\r\n    let newReel: cc.Node;\r\n    for (let i = 0; i < this.numberOfReels; i++) {\r\n      newReel = cc.instantiate(this.reelPrefab);\r\n      this.node.addChild(newReel);\r\n      this.reels[i] = newReel;\r\n\r\n      const reelScript = newReel.getComponent('Reel');\r\n      reelScript.shuffle(); //randomizes the game reels \r\n      reelScript.reelAnchor.getComponent(cc.Layout).enabled = false;\r\n    }\r\n\r\n    this.node.getComponent(cc.Widget).updateAlignment();\r\n  }\r\n// activates button so the tiles can spin and changes the button to stop function\r\n  spin(): void {\r\n    this.spinning = true;\r\n    this.button.getChildByName('Label').getComponent(cc.Label).string = 'STOP';\r\n\r\n    //alternates the reels spining direction in odd and even rolls\r\n    for (let i = 0; i < this.numberOfReels; i++) {\r\n      const theReel = this.reels[i].getComponent('Reel');\r\n      theReel.node.opacity = 255;\r\n\r\n      if (i % 2) {\r\n        theReel.spinDirection = Aux.Direction.Down;\r\n      } else {\r\n        theReel.spinDirection = Aux.Direction.Up;\r\n      }\r\n\r\n      theReel.doSpin(0.03 * i);\r\n    }\r\n  }\r\n\r\n//changes the interactivity for stop and spin button\r\n  lock(): void {\r\n    this.button.getComponent(cc.Button).interactable = false;\r\n  }\r\n\r\n//stop each reel in a set time and changes the button label to spin function\r\n  stop(result: Array<Array<number>> = null): void {\r\n    setTimeout(() => {\r\n      this.spinning = false;\r\n      this.button.getComponent(cc.Button).interactable = true;\r\n      this.button.getChildByName('Label').getComponent(cc.Label).string = 'SPIN';\r\n    }, 2500);\r\n\r\n    const rngMod = Math.random() / 2;\r\n    for (let i = 0; i < this.numberOfReels; i++) {\r\n      const spinDelay = i < 2 + rngMod ? i / 4 : rngMod * (i - 2) + i / 4;\r\n      const theReel = this.reels[i].getComponent('Reel');\r\n\r\n      //sets the interval for spin motion and reaction when reels stop.\r\n      setTimeout(() => {\r\n        theReel.readyStop(result[i]);\r\n        theReel.node.opacity = 120;\r\n      }, spinDelay * 1000);\r\n    }  \r\n  }\r\n}\r\n\r\n//  function evaluateResult() {\r\n//    this.winningline = [];\r\n   \r\n//    for(let lineIdx=0; lineIdx< 5; lineIdx++){\r\n//       const currentAnimal = null;\r\n//       let streak = 0;\r\n\r\n//       for(let coordenates=1; coordenates<4; coordenates++){\r\n\r\n//           if(currentAnimal === coordAnimal ){\r\n//             streak++\r\n//         } else {\r\n//           if(currentAnimal !== coordAnimal){\r\n//             break;\r\n//           } \r\n//         }\r\n//         if(streak >= 5){\r\n//           //colocar glow\r\n//           setTimeout(() => {\r\n//             //high lighted line\r\n//           }, 1000);\r\n//         }\r\n//       }\r\n//     }\r\n//   }\r\n   "]}